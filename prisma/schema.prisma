generator client {
  provider = "prisma-client-js"
  // previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserTelegramMetaData {
  id           String   @id @default(cuid())
  isLive       Boolean  @default(false) @map("is_live")
  isPremium    Boolean  @default(false) @map("is_premium")
  isRtl        Boolean  @default(false) @map("is_rtl")
  firstName    String?  @map("first_name")
  lastName     String?  @map("last_name")
  username     String?
  languageCode String   @map("language_code")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  user         User     @relation(fields: [userId], references: [id])
  userId       String   @unique @map("user_id")

  @@map("user_telegram_meta_data")
}

model User {
  id                String                @id @default(cuid())
  telegramId        String?               @unique @map("telegram_id")
  inviterTelegramId String?               @map("inviter_telegram_id")
  username          String                @unique
  createdAt         DateTime              @default(now()) @map("created_at")
  updatedAt         DateTime              @updatedAt @map("updated_at")
  subscriptions     Subscriptions?
  telegramMetaData  UserTelegramMetaData?
  language          Language[]

  @@map("user")
}

model Subscriptions {
  id        String                 @id @default(cuid())
  status    SubscriptionStatusEnum
  login     String                 @unique @default(cuid())
  token     String                 @unique @default(cuid())
  createdAt DateTime               @default(now()) @map("created_at")
  updatedAt DateTime               @updatedAt @map("updated_at")
  user      User                   @relation(fields: [userId], references: [id])
  userId    String                 @unique @map("user_id")

  @@map("subscriptions")
}

enum SubscriptionStatusEnum {
  ACTIVE
  EXPERED
  DISABLED
  BANNED
}

model Servers {
  id        String   @id @default(cuid())
  enabled   Boolean  @default(true)
  name      String
  key       String   @unique
  url       String
  port      Int
  network   Decimal
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  counryKey String
  counry    String
  city      String

  @@map("servers")
}

model Language {
  id         String  @id @default(cuid())
  name       String
  nativeName String  @map("native_name")
  iso6391    String  @unique @map("iso_639_1")
  iso6392    String  @unique @map("iso_639_2")
  iso6393    String  @unique @map("iso_639_3")
  rtl        Boolean @default(false)
  user       User    @relation(fields: [userId], references: [id])
  userId     String  @map("user_id")

  @@map("language")
}
